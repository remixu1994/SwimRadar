@implements IDisposable

@inject NavigationManager NavigationManager

<MudPaper Width="250px" Class="py-3" Elevation="0">
    <MudNavMenu>
        <MudText Typo="Typo.h6" Class="px-4">Swim Radar</MudText>
        <MudDivider Class="my-2"/>
        <AuthorizeView>
            <Authorized>
                <MudNavLink Href="/swim/upload">Swim Upload</MudNavLink>
                
                <MudNavLink class="nav-link" href="Account/Manage"> @context.User.Identity?.Name</MudNavLink>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken/>
                        <input type="hidden" name="ReturnUrl" value="@currentUrl"/>
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                @* <div class="nav-item px-3"> *@
                @*     <MudNavLink Href="Account/Register">Register</MudNavLink> *@
                @* </div> *@
                <div class="nav-item px-3">
                    <MudNavLink Href="Account/Login">Login</MudNavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
        <MudNavLink Href="/about">About</MudNavLink>
    </MudNavMenu>
</MudPaper>


@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}